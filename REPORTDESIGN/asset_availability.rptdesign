<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.22" id="1">
    <property name="comments">Copyright (c) 2006 &lt;&lt;Your Company Name here>></property>
    <property name="createdBy">Eclipse BIRT Designer Version 3.7.1.v20110905 Build &lt;3.7.1.v20110905-1820></property>
    <html-property name="description">This template will create a report having a single header with multiple rows of data.</html-property>
    <simple-property-list name="includeResource">
        <value>asset</value>
    </simple-property-list>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[importPackage(Packages.com.ibm.tivoli.maximo.report.script);

mxReportScriptContext = MXReportScriptContext.initialize(reportContext);

mxReportScriptContext.setDefaultLogLevel("DEBUG");
//mxReportScriptContext.setDefaultLogFile("C:/temp/asset_availability.log");

scriptLogger = mxReportScriptContext.getReportScriptLogger();
var hrs_removed = 0;

function getUnavailableWPHours (mxDS, startDate, endDate, siteid, assetnum) {

	var jdbc_stdt = MXReportSqlFormat.getStartDayTimestampFunction(new Date(startDate));
	var jdbc_enddt = MXReportSqlFormat.getStartDayTimestampFunction(new Date(endDate));
	
	var wphours = 0;
	var workPeriodDataSet = MXReportDataSetProvider.create(mxDS.getName(), "workPeriodDataSet");
	workPeriodDataSet.open();
	
	var workPeriodSQL = "select asset.assetnum, asset.description, asset.siteid, "
	+ " sum(" + workPeriodDataSet.getNullValueFunction("workperiod.workhours","0") + ") as sched_hrs "
	+ " from asset left outer join " 
	+ " workperiod on "
	+ " asset.orgid = workperiod.orgid "
	+ " and asset.calnum = workperiod.calnum "
	+ " and workperiod.workdate between " + jdbc_stdt + " and " + jdbc_enddt
	+ " where (asset.shiftnum = workperiod.shiftnum or asset.shiftnum is null) "
	+ " and asset.assetnum = '" + assetnum + "' "
	+ " and asset.siteid = '" + siteid + "' "
	+ " group by asset.siteid, asset.assetnum, asset.description";
	
	workPeriodDataSet.setQuery(workPeriodSQL);
	
	if (workPeriodDataSet.fetch()) {
		wphours = workPeriodDataSet.getDouble("sched_hrs");
	}
	
	return wphours
}

function getDowntimeAverage(mxDS, change_date, assetSite, asset, this_isRun, curr_downtime, startdt, enddt, wonum) {
	if (scriptLogger.isDebugEnabled()) {
		scriptLogger.debug(">>> entering fetchParentCost()");
	}

	var avgDown = 0;

	if (this_isRun == 1) {
		// Calculate the average downtime, search for isrunning=0 prior to start date
		var avgdowntimeDataSet = MXReportDataSetProvider.create(mxDS.getName(), "avgdowntime");
		avgdowntimeDataSet.open();
		
		var avgdownSql = "select max(assetstatus.changedate) as changedate " 
		+ " from assetstatus where assetstatus.changedate < " + startdt 
		+ " and assetstatus.siteid = ? " 
		+ " and assetstatus.assetnum = ? " 
		+ " and assetstatus.isrunning = 0 ";
		if (BirtComp.equalTo(wonum, null) || BirtComp.equalTo(wonum,'')) {
		avgdownSql= avgdownSql + " and assetstatus.wonum is null ";
		} else {
		avgdownSql= avgdownSql + " and assetstatus.wonum = ? ";
		}
		
		avgdowntimeDataSet.setQuery(avgdownSql);
		avgdowntimeDataSet.setQueryParameterValue(1, assetSite);
		avgdowntimeDataSet.setQueryParameterValue(2, asset);
		if (BirtComp.notEqual(wonum, null) &amp;&amp; BirtComp.notEqual(wonum,'')) {
			avgdowntimeDataSet.setQueryParameterValue(3, wonum);
		}
		
		if (avgdowntimeDataSet.fetch()) {
			var downDate = avgdowntimeDataSet.getTimestamp("changedate");
			// calculate partial downtime for this wonum/assetnum combination as it started running but didn't stop running in this date range
			var days_down = (DateTimeSpan.minutes(downDate, change_date) / 60) / 24; //convert minutes to fractional days
			avgDown = curr_downtime / days_down;
		}
		
		avgdowntimeDataSet.close();
		
	} else if (this_isRun == 0) {
	
		// Calculate the average downtime, search for isrunning=1 after end date
		var avgdowntimeDataSet = MXReportDataSetProvider.create(mxDS.getName(), "avgdowntime");
		avgdowntimeDataSet.open();
		
		var avgdownSql = "select min(assetstatus.changedate) as changedate, assetstatus.downtime " 
		+ " from assetstatus where assetstatus.changedate > " + enddt 
		+ " and assetstatus.siteid = ? " 
		+ " and assetstatus.assetnum = ? " 
		+ " and assetstatus.isrunning = 1 ";
		if (BirtComp.equalTo(wonum, null) || BirtComp.equalTo(wonum,'')) {
		avgdownSql= avgdownSql + " and assetstatus.wonum is null ";
		} else {
		avgdownSql= avgdownSql + " and assetstatus.wonum = ? ";
		}
		avgdownSql = avgdownSql + " group by assetstatus.changedate, assetstatus.downtime ";
		avgdownSql = avgdownSql + " order by assetstatus.changedate, assetstatus.downtime ";
		
		avgdowntimeDataSet.setQuery(avgdownSql);
		avgdowntimeDataSet.setQueryParameterValue(1, assetSite);
		avgdowntimeDataSet.setQueryParameterValue(2, asset);
		if (BirtComp.notEqual(wonum, null) &amp;&amp; BirtComp.notEqual(wonum,'')) {
			avgdowntimeDataSet.setQueryParameterValue(3, wonum);
		}
		
		if (avgdowntimeDataSet.fetch()) {
			var upDate = avgdowntimeDataSet.getTimestamp("changedate");
			curr_downtime = avgdowntimeDataSet.getDouble("downtime");
			// calculate partial downtime for this wonum/assetnum combination as it started running but didn't stop running in this date range
			var days_down = (DateTimeSpan.minutes(change_date, upDate) / 60) / 24; //convert minutes to fractional days
			avgDown = curr_downtime / days_down;
			
			if (scriptLogger.isDebugEnabled()) {
				scriptLogger.debug("["+maximoDataSet.getName() + "] >>> inside query ");
				scriptLogger.debug(">>> upDate : " + upDate);
				scriptLogger.debug(">>> days_down : " + days_down);
				scriptLogger.debug(">>> curr_downtime : " + curr_downtime);
				scriptLogger.debug(">>> avgDown : " + avgDown);
			}
		} else {
		    hrs_removed = hrs_removed + getUnavailableWPHours(mxDS, change_date, params["enddate"], assetSite, asset);
		}
		
		avgdowntimeDataSet.close();
	
	} else {
	
		// Calculate the average downtime, search outside the start and enddates
		
		var downDate = null;
		var upDate = null;
		var isRun = -1;
		
		var avgdowntimeDataSet = MXReportDataSetProvider.create(mxDS.getName(), "avgdowntime");
		avgdowntimeDataSet.open();
		
		var avgdownSql = "select max(assetstatus.changedate) as changedate, assetstatus.wonum, assetstatus.isrunning " 
		+ " from assetstatus where assetstatus.changedate < " + startdt 
		+ " and assetstatus.siteid = ? " 
		+ " and assetstatus.assetnum = ? " 
		+ " group by assetstatus.changedate, assetstatus.wonum, assetstatus.isrunning "
		+ " order by assetstatus.changedate desc, assetstatus.wonum, assetstatus.isrunning";
		
		avgdowntimeDataSet.setQuery(avgdownSql);
		avgdowntimeDataSet.setQueryParameterValue(1, assetSite);
		avgdowntimeDataSet.setQueryParameterValue(2, asset);
		
		if (avgdowntimeDataSet.fetch()) {
			downDate = avgdowntimeDataSet.getTimestamp("changedate");
			wonum = avgdowntimeDataSet.getString("wonum");
			isRun = avgdowntimeDataSet.getInteger("isrunning");
		}
		
		avgdowntimeDataSet.close();
		
		if (isRun == 0) {
	        // now find endDate
			avgdowntimeDataSet2 = MXReportDataSetProvider.create(mxDS.getName(), "avgdowntime2");
			avgdowntimeDataSet2.open();
			
			var avgdownSql = "select min(assetstatus.changedate) as changedate, assetstatus.downtime " 
			+ " from assetstatus where assetstatus.changedate > " + enddt 
			+ " and assetstatus.siteid = ? " 
			+ " and assetstatus.assetnum = ? "; 
			if (BirtComp.equalTo(wonum, null) || BirtComp.equalTo(wonum,'')) {
				avgdownSql= avgdownSql + " and assetstatus.wonum is null ";
			} else {
				avgdownSql= avgdownSql + " and assetstatus.wonum = ? ";
			}
			avgdownSql = avgdownSql + " and assetstatus.isrunning = 1 "
			+ " group by assetstatus.changedate, assetstatus.downtime "
			+ " order by assetstatus.changedate, assetstatus.downtime";
			
			avgdowntimeDataSet2.setQuery(avgdownSql);
			avgdowntimeDataSet2.setQueryParameterValue(1, assetSite);
			avgdowntimeDataSet2.setQueryParameterValue(2, asset);
			if (BirtComp.notEqual(wonum, null) &amp;&amp; BirtComp.notEqual(wonum,'')) {
				avgdowntimeDataSet2.setQueryParameterValue(3, wonum);
			}
			
			if (avgdowntimeDataSet2.fetch()) {
				upDate = avgdowntimeDataSet2.getTimestamp("changedate");
				curr_downtime = avgdowntimeDataSet2.getDouble("downtime");
			} else {
			    hrs_removed = hrs_removed + getUnavailableWPHours(mxDS, change_date, params["enddate"], assetSite, asset);
			}
			
			avgdowntimeDataSet.close();
			
			if ((downDate != null) &amp;&amp; (upDate != null)) {
				// calculate partial downtime for this wonum/assetnum combination as it started running but didn't stop running in this date range
				var days_down = (DateTimeSpan.minutes(downDate, upDate) / 60) / 24; //convert minutes to fractional days
				avgDown = curr_downtime / days_down;
			}
		}

	}
		if (scriptLogger.isDebugEnabled()) {
			scriptLogger.debug("["+maximoDataSet.getName() + "] >>> getAverageDowntime ");
			scriptLogger.debug(">>> avgDown : " + avgDown);
		}
return avgDown;
}]]></method>
    <method name="afterFactory"><![CDATA[MXReportScriptContext.close();]]></method>
    <property name="theme">MaximoSystemLibrary.maximoTheme</property>
    <text-property name="displayName">Maximo List Report Template</text-property>
    <property name="layoutPreference">auto layout</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">MaximoSystemLibrary.rptlibrary</property>
            <property name="namespace">MaximoSystemLibrary</property>
        </structure>
    </list-property>
    <template-parameter-definitions>
        <template-parameter-definition name="NewTemplateParameterDefinition" id="71">
            <property name="allowedType">Label</property>
            <text-property name="description">Double-click to enter the report title.</text-property>
            <default>
                <label id="72">
                    <text-property name="text">Report Title</text-property>
                </label>
            </default>
        </template-parameter-definition>
    </template-parameter-definitions>
    <parameters>
        <scalar-parameter name="where" id="25">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <simple-property-list name="defaultValue">
                <value type="constant">1=1</value>
            </simple-property-list>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="appname" id="200">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="paramdelimiter" id="202">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="paramstring" id="201">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="assetnum" id="251">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="site" id="234">
            <property name="valueType">static</property>
            <property name="isRequired">false</property>
            <property name="dataType">string</property>
            <simple-property-list name="defaultValue">
                <value type="constant">BEDFORD</value>
            </simple-property-list>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="startdate" id="232">
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">dateTime</property>
            <simple-property-list name="defaultValue">
                <value type="constant">2000-01-01T00:00:00.000</value>
            </simple-property-list>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="enddate" id="233">
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">dateTime</property>
            <simple-property-list name="defaultValue">
                <value type="constant">2007-01-01T00:00:00.000</value>
            </simple-property-list>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="maximoDataSource" id="64" extends="MaximoSystemLibrary.maximoDataSource"/>
    </data-sources>
    <data-sets>
        <script-data-set name="dataSet" id="5">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">assetnum</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">description</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">sched_hrs</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">downtime_hrs</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">availability</property>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">siteid</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">assetnum</property>
                </structure>
                <structure>
                    <property name="columnName">description</property>
                </structure>
                <structure>
                    <property name="columnName">sched_hrs</property>
                </structure>
                <structure>
                    <property name="columnName">downtime_hrs</property>
                </structure>
                <structure>
                    <property name="columnName">availability</property>
                </structure>
                <structure>
                    <property name="columnName">siteid</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">assetnum</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">description</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">sched_hrs</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">downtime_hrs</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">availability</property>
                        <property name="dataType">decimal</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">siteid</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">maximoDataSource</property>
            <method name="open"><![CDATA[maximoDataSet = MXReportDataSetProvider.create(this.getDataSource().getName(), this.getName());
maximoDataSet.open();

current_dt = 0;
startdt_jdbc = MXReportSqlFormat.getStartDayTimestampFunction(params["startdate"]);
startdt = MXReportSqlFormat.getStartDayTimestamp(params["startdate"]);
enddt_jdbc = MXReportSqlFormat.getEndDayTimestampFunction(params["enddate"]);
enddt = MXReportSqlFormat.getEndDayTimestamp(params["enddate"]);

var sqlText = new String();

sqlText = "select asset.assetnum, asset.description, asset.siteid, "
+ " sum(" + maximoDataSet.getNullValueFunction("workperiod.workhours","0") + ") as sched_hrs "
+ " from asset left outer join " 
+ " workperiod on "
+ " asset.orgid = workperiod.orgid "
+ " and asset.calnum = workperiod.calnum "
+ " and workperiod.workdate between " + startdt_jdbc + " and " + enddt_jdbc
+ " where (asset.shiftnum = workperiod.shiftnum or asset.shiftnum is null) "
+ " and " + params["where"]
+ " group by asset.siteid, asset.assetnum, asset.description";

maximoDataSet.setQuery(sqlText);]]></method>
            <method name="fetch"><![CDATA[if (!maximoDataSet.fetch())
	return (false);

// Add a line for each output column
// The specific get method should match the data type of the output column.
var asset = maximoDataSet.getString("assetnum");
var assetSite = maximoDataSet.getString("siteid");
row["assetnum"] = asset;
row["description"] = maximoDataSet.getString("description");
var scheduled = maximoDataSet.getDouble("sched_hrs");
row["sched_hrs"] = scheduled;
row["siteid"] = maximoDataSet.getString("siteid");
// Calculate the total downtime, adjusting for asset status pairs where one status
// change occurs outside the user-specified date range.
downtimeDataSet = MXReportDataSetProvider.create(this.getDataSource().getName(), "downtime");
downtimeDataSet.open();

var downSql = "select assetstatus.isrunning, assetstatus.wonum, assetstatus.changedate, assetstatus.downtime " 
+ " from assetstatus where assetstatus.changedate between " + startdt_jdbc + " and " + enddt_jdbc + " "
+ " and assetstatus.siteid = ? " 
+ " and assetstatus.assetnum = ? " 
+ " order by assetstatus.changedate";

downtimeDataSet.setQuery(downSql);
downtimeDataSet.setQueryParameterValue(1, assetSite);
downtimeDataSet.setQueryParameterValue(2, asset);

var flg = 1;
var recCount = 0;
var prev_isRun = 0;
var this_isRun = 0;
var prev_wonum = "";
var this_wonum = "";
var change_date;
var partialDowntime = 0;
var tot_down_time = 0;
var curr_downtime = 0;
var final_downtime = 0;
hrs_removed = 0;

while (downtimeDataSet.fetch()) {
	if (flg == 1) {
		//This is for fetching the first record of the set 
		this_isRun = downtimeDataSet.getInteger("isrunning");
		if (this_isRun > 0) {
			this_wonum = downtimeDataSet.getString("wonum");
			change_date = downtimeDataSet.getTimestamp("changedate");
			curr_downtime = downtimeDataSet.getDouble("downtime");
			// calculate partial downtime for this wonum/assetnum combination as it started running but didn't stop running in this date range
			var days_down = (DateTimeSpan.minutes(startdt, change_date) / 60) / 24; //convert minutes to fractional days
			var down_avg = getDowntimeAverage(this.getDataSource(), change_date, assetSite, asset, this_isRun, curr_downtime, startdt_jdbc, enddt_jdbc, this_wonum);
			if (down_avg > 0) {
			    partialDowntime = Math.abs(days_down) * down_avg;
			} else {
				partialDowntime = Math.abs(days_down) * (curr_downtime / days_down);
			}
			if (scriptLogger.isDebugEnabled()) {
				scriptLogger.debug("["+maximoDataSet.getName() + "] >>> first record : isRunning = 1 ");
				scriptLogger.debug(">>> change_date : " + change_date);
				scriptLogger.debug(">>> hrs_down : " + days_down);
				scriptLogger.debug(">>> partialDowntime : " + partialDowntime);
			}
		}
		flg = 0;
		change_date = downtimeDataSet.getTimestamp("changedate");
		prev_isRun = this_isRun;
		prev_wonum = this_wonum;
	}
	else {
		this_isRun = downtimeDataSet.getInteger("isrunning");
		this_wonum = downtimeDataSet.getString("wonum");
		
		// check if another partial downtime needs to be calculated
		if (prev_isRun == this_isRun) {
		  if (this_isRun > 0) {
		  	// calculate partial downtime for this wonum/assetnum combination as it started running but didn't stop running in this date range
		  	change_date = downtimeDataSet.getTimestamp("changedate");
		  	var days_down = (DateTimeSpan.minutes(startdt, change_date) / 60) / 24; //convert minutes to fractional days
		  	var down_avg = getDowntimeAverage(this.getDataSource(), change_date, assetSite, asset, this_isRun, curr_downtime, startdt_jdbc, enddt_jdbc, this_wonum);
			if (down_avg > 0) {
			    partialDowntime = Math.abs(days_down) * down_avg;
			} else {
				partialDowntime = Math.abs(days_down) * (curr_downtime / days_down);
			}
			if (scriptLogger.isDebugEnabled()) {
				scriptLogger.debug("["+maximoDataSet.getName() + "] >>> Another record : isRunning = 1 ");
				scriptLogger.debug(">>> change_date : " + change_date);
				scriptLogger.debug(">>> hrs_down : " + days_down);
				scriptLogger.debug(">>> partialDowntime : " + partialDowntime);
			}
		  }
		  else if (this_isRun == 0) {
		  	// must calculate previous record change date partial downtime as it stopped running but never started running again in this date range
		  	var days_down = (DateTimeSpan.minutes(change_date, enddt) / 60) / 24; //convert minutes to fractional days
		  	var down_avg = getDowntimeAverage(this.getDataSource(), change_date, assetSite, asset, this_isRun, 0, startdt_jdbc, enddt_jdbc, this_wonum);
			if (down_avg > 0) {
			    partialDowntime = Math.abs(days_down) * down_avg;
			} else {
				partialDowntime = Math.abs(days_down) * (curr_downtime / days_down);
			}
			change_date = downtimeDataSet.getTimestamp("changedate");
			if (scriptLogger.isDebugEnabled()) {
				scriptLogger.debug("["+maximoDataSet.getName() + "] >>> Another record : isRunning = 0 ");
				scriptLogger.debug(">>> change_date : " + change_date);
				scriptLogger.debug(">>> hrs_down : " + days_down);
				scriptLogger.debug(">>> partialDowntime : " + partialDowntime);
			}
		  }
		} else {
			change_date = downtimeDataSet.getTimestamp("changedate");
		}
		prev_isRun = this_isRun;
		prev_wonum = this_wonum;
	} 
	// Keep a running sum of the downtime for this asset so we don't have to execute a separate query
	if (partialDowntime > 0) {
		curr_downtime = partialDowntime;
		partialDowntime = 0;
	} else {
		curr_downtime = downtimeDataSet.getDouble("downtime");
	}
	tot_down_time = tot_down_time + curr_downtime;
	recCount++;
}

if ((recCount == 1) || ((prev_isRun == 0) &amp;&amp; (recCount > 0))) {
	// only one record or last record if isRunning = 0 then we must calculate partial downtime as it was never calculated above
	if (this_isRun == 0) {
		var days_down = (DateTimeSpan.minutes(change_date, enddt) / 60) / 24; //convert minutes to fractional days
		var down_avg = getDowntimeAverage(this.getDataSource(), change_date, assetSite, asset, this_isRun, 0, startdt_jdbc, enddt_jdbc, this_wonum);
		if (down_avg > 0) {
		    partialDowntime = Math.abs(days_down) * down_avg;
		} else {
			partialDowntime = Math.abs(days_down) * (curr_downtime / days_down);
		}
		if (scriptLogger.isDebugEnabled()) {
			scriptLogger.debug("["+maximoDataSet.getName() + "] >>> first record : isRunning = 0 ");
			scriptLogger.debug(">>> change_date : " + change_date);
			scriptLogger.debug(">>> hrs_down : " + days_down);
			scriptLogger.debug(">>> partialDowntime : " + partialDowntime);
		}

		// Keep a running sum of the downtime for this asset so we don't have to execute a separate query
		if (partialDowntime > 0) {
			curr_downtime = partialDowntime;
			partialDowntime = 0;
		} else {
			scriptLogger.debug(">>> curr_downtime : " + curr_downtime);
			//curr_downtime = downtimeDataSet.getDouble("downtime");
		}
		tot_down_time = tot_down_time + curr_downtime;
	}
} else if (recCount == 0) {
    // No assetstatus records were found within the date range specified
    var hrs_down = (DateTimeSpan.minutes(startdt, enddt) / 60) / 24; //convert minutes to fractional days
	var down_avg = getDowntimeAverage(this.getDataSource(), change_date, assetSite, asset, 3, 0, startdt_jdbc, enddt_jdbc, this_wonum);
	if (down_avg > 0) {
		partialDowntime = Math.abs(hrs_down) * down_avg;
	} else {
		partialDowntime = 0;
	}
	
	if (partialDowntime > 0) {
		tot_down_time = tot_down_time + partialDowntime;
	}
	
}

downtimeDataSet.close();

final_downtime = Math.abs(tot_down_time);
row["downtime_hrs"] = final_downtime;
row["availability"] = BirtMath.safeDivide(((scheduled - hrs_removed) - final_downtime), (scheduled - hrs_removed), 0);

		if (scriptLogger.isDebugEnabled()) {
			scriptLogger.debug(">>> final_downtime : " + final_downtime);
			scriptLogger.debug(">>> scheduled : " + scheduled);
			scriptLogger.debug(">>> availability_used : " + (scheduled - hrs_removed));
			scriptLogger.debug(">>> availability : " + row["availability"]);
		}

return (true);]]></method>
        </script-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="maximoLandscape" id="47" extends="MaximoSystemLibrary.maximoLandscape">
            <overridden-values>
                <ref-entry baseId="304" name="NewGrid2" id="304"/>
                <ref-entry baseId="305" id="305"/>
                <ref-entry baseId="306" id="306"/>
                <ref-entry baseId="307" id="307"/>
                <ref-entry baseId="308" id="308"/>
                <ref-entry baseId="340" name="NewImage1" id="340"/>
                <ref-entry baseId="309" id="309"/>
                <ref-entry baseId="310" name="NewImage" id="310"/>
                <ref-entry baseId="322" name="NewGrid" id="322"/>
                <ref-entry baseId="323" id="323"/>
                <ref-entry baseId="324" id="324"/>
                <ref-entry baseId="325" id="325"/>
                <ref-entry baseId="326" id="326"/>
                <ref-entry baseId="328" name="NewText" id="328"/>
                <ref-entry baseId="327" id="327"/>
                <ref-entry baseId="329" name="NewGrid1" id="329"/>
                <ref-entry baseId="330" id="330"/>
                <ref-entry baseId="331" id="331"/>
                <ref-entry baseId="332" id="332"/>
                <ref-entry baseId="333" id="333"/>
                <ref-entry baseId="334" id="334"/>
                <ref-entry baseId="335" name="NewAutoText" id="335"/>
                <ref-entry baseId="336" id="336"/>
                <ref-entry baseId="337" name="NewText1" id="337"/>
                <ref-entry baseId="338" id="338"/>
                <ref-entry baseId="339" name="NewAutoText1" id="339"/>
            </overridden-values>
        </simple-master-page>
    </page-setup>
    <body>
        <table id="7">
            <property name="width">100%</property>
            <property name="dataSet">dataSet</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">enddate</property>
                    <expression name="expression">params["enddate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">site</property>
                    <expression name="expression" type="javascript">params["site"].value</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">startdate</property>
                    <expression name="expression">params["startdate"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">assetnum</property>
                    <expression name="expression">dataSetRow["assetnum"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">description</property>
                    <expression name="expression">dataSetRow["description"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">sched_hrs</property>
                    <expression name="expression">dataSetRow["sched_hrs"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">downtime_hrs</property>
                    <expression name="expression">dataSetRow["downtime_hrs"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">availability</property>
                    <expression name="expression">dataSetRow["availability"]</expression>
                    <property name="dataType">decimal</property>
                </structure>
                <structure>
                    <property name="name">appname</property>
                    <expression name="expression">params["appname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">chart_key</property>
                    <expression name="expression">1</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">label_key</property>
                    <expression name="expression">1</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">siteid</property>
                    <expression name="expression" type="javascript">dataSetRow["siteid"]</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <property name="pageBreakInterval">50</property>
            <list-property name="sort">
                <structure>
                    <expression name="key">row["availability"]</expression>
                    <property name="direction">asc</property>
                </structure>
            </list-property>
            <column id="83">
                <property name="width">1.3958333333in</property>
            </column>
            <column id="79">
                <property name="width">2.8020833333in</property>
            </column>
            <column id="91">
                <property name="width">1.3125in</property>
            </column>
            <column id="87">
                <property name="width">1.24in</property>
            </column>
            <column id="17">
                <property name="width">1.6in</property>
            </column>
            <column id="18">
                <property name="width">1.5520833333in</property>
            </column>
            <header>
                <row id="180">
                    <property name="style">title</property>
                    <cell id="181">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                        <label id="226">
                            <property name="refTemplateParameter">NewTemplateParameterDefinition</property>
                            <text-property name="text" key="asset_avail_title">Asset Availability</text-property>
                        </label>
                    </cell>
                </row>
                <row id="173">
                    <property name="height">0.08in</property>
                    <cell id="174">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                        <property name="borderBottomColor">#000000</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                    </cell>
                </row>
                <row id="166">
                    <cell id="167">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                        <property name="borderBottomColor">#000000</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                        <grid id="109">
                            <property name="marginTop">2pt</property>
                            <property name="marginBottom">2pt</property>
                            <property name="width">100%</property>
                            <column id="110">
                                <property name="width">1in</property>
                                <property name="style">reportheaderlabel</property>
                            </column>
                            <column id="111">
                                <property name="width">8.875in</property>
                                <property name="style">reportheaderdata</property>
                            </column>
                            <row id="112">
                                <cell id="113">
                                    <label id="118">
                                        <text-property name="text" key="startdate_colon">Start Date:</text-property>
                                    </label>
                                </cell>
                                <cell id="114">
                                    <property name="paddingLeft">2px</property>
                                    <data id="237">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Short Date</property>
                                            <property name="pattern">Short Date</property>
                                        </structure>
                                        <property name="resultSetColumn">startdate</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="115">
                                <cell id="116">
                                    <label id="119">
                                        <text-property name="text" key="enddate_colon">End Date:</text-property>
                                    </label>
                                </cell>
                                <cell id="117">
                                    <property name="paddingLeft">2px</property>
                                    <data id="235">
                                        <structure name="dateTimeFormat">
                                            <property name="category">Short Date</property>
                                            <property name="pattern">Short Date</property>
                                        </structure>
                                        <property name="resultSetColumn">enddate</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="227">
                                <cell id="228">
                                    <label id="230">
                                        <text-property name="text" key="site_colon">Site:</text-property>
                                    </label>
                                </cell>
                                <cell id="229">
                                    <property name="paddingLeft">2px</property>
                                    <data id="236">
                                        <property name="resultSetColumn">site</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                </row>
                <row id="144">
                    <property name="height">0.06in</property>
                    <cell id="145">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                    </cell>
                </row>
            </header>
            <group id="341">
                <property name="groupName">chart_group</property>
                <property name="interval">none</property>
                <property name="sortDirection">asc</property>
                <expression name="keyExpr">row["chart_key"]</expression>
                <structure name="toc">
                    <expression name="expressionValue">null</expression>
                </structure>
                <property name="repeatHeader">false</property>
                <property name="hideDetail">false</property>
                <property name="pageBreakAfter">auto</property>
                <property name="pageBreakBefore">auto</property>
                <header>
                    <row id="342">
                        <property name="style">chart</property>
                        <cell id="343">
                            <property name="colSpan">6</property>
                            <property name="rowSpan">1</property>
                            <extended-item extensionName="Chart" name="Bar Chart" id="273">
                                <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:data="http://www.birt.eclipse.org/ChartModelData" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/ChartModelType">
  <Type>Bar Chart</Type>
  <SubType>Side-by-side</SubType>
  <Description>
    <Value></Value>
    <Font>
      <Alignment/>
    </Font>
  </Description>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <Label>
        <Caption>
          <Value>asset_availability=&lt;Value of key 'asset_availability'></Value>
          <Font>
            <Name>SansSerif</Name>
            <Size>14.0</Size>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Anchor>North_West</Anchor>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <ClientArea>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Name>SansSerif</Name>
          <Size>10.0</Size>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
      <ShowValue>false</ShowValue>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>684.0</Width>
      <Height>252.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>255</Transparency>
      <Red>255</Red>
      <Green>255</Green>
      <Blue>255</Blue>
    </Background>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional</Dimension>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>A, B, C</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>5,4,12</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity>
    <LegendBehavior>None</LegendBehavior>
  </Interactivity>
  <EmptyMessage>
    <Caption>
      <Value></Value>
      <Font>
        <Alignment/>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>0</Transparency>
      <Red>255</Red>
      <Green>255</Green>
      <Blue>255</Blue>
    </Background>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
    </Outline>
    <Insets>
      <Top>0.0</Top>
      <Left>2.0</Left>
      <Bottom>0.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Visible>false</Visible>
  </EmptyMessage>
  <Axes>
    <Type>Text</Type>
    <Title>
      <Caption>
        <Value>X-Axis Title</Value>
        <Font>
          <Size>14.0</Size>
          <Bold>true</Bold>
          <Alignment>
            <horizontalAlignment>Center</horizontalAlignment>
            <verticalAlignment>Center</verticalAlignment>
          </Alignment>
        </Font>
      </Caption>
      <Background xsi:type="attribute:ColorDefinition">
        <Transparency>0</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Background>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
      </Outline>
      <Insets>
        <Top>0.0</Top>
        <Left>2.0</Left>
        <Bottom>0.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Visible>false</Visible>
    </Title>
    <TitlePosition>Below</TitlePosition>
    <AssociatedAxes>
      <Type>Linear</Type>
      <Title>
        <Caption>
          <Value>Y-Axis Title</Value>
          <Font>
            <Size>14.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
            <Rotation>90.0</Rotation>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Title>
      <TitlePosition>Left</TitlePosition>
      <SeriesDefinitions>
        <Query>
          <Definition></Definition>
        </Query>
        <SeriesPalette>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>35</Red>
            <Green>89</Green>
            <Blue>115</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>228</Red>
            <Green>184</Green>
            <Blue>88</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>144</Red>
            <Green>213</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>229</Red>
            <Green>237</Green>
            <Blue>129</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>183</Red>
            <Green>68</Green>
            <Blue>61</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>182</Red>
            <Green>146</Green>
            <Blue>182</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>73</Red>
            <Green>137</Green>
            <Blue>120</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>146</Red>
            <Green>194</Green>
            <Blue>198</Blue>
          </Entries>
        </SeriesPalette>
        <Series xsi:type="type:BarSeries">
          <Visible>true</Visible>
          <Label>
            <Caption>
              <Value></Value>
              <Font>
                <Name>SansSerif</Name>
                <Size>10.0</Size>
                <Alignment/>
              </Font>
            </Caption>
            <Background xsi:type="attribute:ColorDefinition">
              <Transparency>0</Transparency>
              <Red>255</Red>
              <Green>255</Green>
              <Blue>255</Blue>
            </Background>
            <Outline>
              <Style>Solid</Style>
              <Thickness>1</Thickness>
              <Color>
                <Transparency>255</Transparency>
                <Red>0</Red>
                <Green>0</Green>
                <Blue>0</Blue>
              </Color>
              <Visible>false</Visible>
            </Outline>
            <Insets>
              <Top>0.0</Top>
              <Left>2.0</Left>
              <Bottom>0.0</Bottom>
              <Right>3.0</Right>
            </Insets>
            <Visible>false</Visible>
          </Label>
          <DataDefinition>
            <Definition>row[&quot;availability_1&quot;]</Definition>
          </DataDefinition>
          <SeriesIdentifier></SeriesIdentifier>
          <DataPoint>
            <Components>
              <Type>Orthogonal_Value</Type>
              <FormatSpecifier xsi:type="attribute:NumberFormatSpecifier">
                <Prefix></Prefix>
                <Suffix>%</Suffix>
                <Multiplier>100.0</Multiplier>
                <FractionDigits>2</FractionDigits>
              </FormatSpecifier>
            </Components>
            <Prefix></Prefix>
            <Suffix></Suffix>
            <Separator></Separator>
          </DataPoint>
          <LabelPosition>Outside</LabelPosition>
          <Stacked>false</Stacked>
          <Triggers>
            <Condition>onmouseover</Condition>
            <Action>
              <Type>Show_Tooltip</Type>
              <Value xsi:type="attribute:TooltipValue">
                <Text></Text>
                <Delay>200</Delay>
              </Value>
            </Action>
          </Triggers>
          <Triggers>
            <Condition>onclick</Condition>
            <Action>
              <Type>Highlight</Type>
              <Value xsi:type="attribute:SeriesValue">
                <Name></Name>
              </Value>
            </Action>
          </Triggers>
          <Translucent>false</Translucent>
          <Riser>Rectangle</Riser>
        </Series>
        <Grouping>
          <Enabled>false</Enabled>
          <GroupingInterval>2.0</GroupingInterval>
          <GroupType>Text</GroupType>
          <AggregateExpression>Sum</AggregateExpression>
        </Grouping>
        <Sorting>Ascending</Sorting>
      </SeriesDefinitions>
      <Orientation>Vertical</Orientation>
      <LineAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </LineAttributes>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Name>SansSerif</Name>
            <Size>10.0</Size>
            <Alignment/>
            <Rotation>0.0</Rotation>
          </Font>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
      <FormatSpecifier xsi:type="attribute:NumberFormatSpecifier">
        <Prefix></Prefix>
        <Suffix>%</Suffix>
        <Multiplier>100.0</Multiplier>
        <FractionDigits>2</FractionDigits>
      </FormatSpecifier>
      <LabelPosition>Left</LabelPosition>
      <Interval>1</Interval>
      <MajorGrid>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>196</Red>
            <Green>196</Green>
            <Blue>196</Blue>
          </Color>
          <Visible>false</Visible>
        </LineAttributes>
        <TickStyle>Across</TickStyle>
        <TickAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>196</Red>
            <Green>196</Green>
            <Blue>196</Blue>
          </Color>
          <Visible>true</Visible>
        </TickAttributes>
      </MajorGrid>
      <MinorGrid>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>225</Red>
            <Green>225</Green>
            <Blue>225</Blue>
          </Color>
          <Visible>false</Visible>
        </LineAttributes>
        <TickStyle>Across</TickStyle>
        <TickAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>225</Red>
            <Green>225</Green>
            <Blue>225</Blue>
          </Color>
          <Visible>false</Visible>
        </TickAttributes>
      </MinorGrid>
      <Scale>
        <Min xsi:type="data:NumberDataElement">
          <Value>0.0</Value>
        </Min>
        <Max xsi:type="data:NumberDataElement">
          <Value>1.0</Value>
        </Max>
        <Step>0.2</Step>
        <MinorGridsPerUnit>5</MinorGridsPerUnit>
        <ShowOutside>true</ShowOutside>
      </Scale>
      <Origin>
        <Type>Value</Type>
        <Value xsi:type="data:NumberDataElement">
          <Value>0.0</Value>
        </Value>
      </Origin>
      <PrimaryAxis>true</PrimaryAxis>
      <Percent>false</Percent>
    </AssociatedAxes>
    <SeriesDefinitions>
      <Query>
        <Definition></Definition>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>35</Red>
          <Green>89</Green>
          <Blue>115</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>228</Red>
          <Green>184</Green>
          <Blue>88</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>144</Red>
          <Green>213</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>229</Red>
          <Green>237</Green>
          <Blue>129</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>183</Red>
          <Green>68</Green>
          <Blue>61</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>182</Red>
          <Green>146</Green>
          <Blue>182</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>73</Red>
          <Green>137</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>146</Red>
          <Green>194</Green>
          <Blue>198</Blue>
        </Entries>
      </SeriesPalette>
      <Series>
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>row[&quot;assetnum_1&quot;]</Definition>
        </DataDefinition>
        <SeriesIdentifier></SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
      </Series>
      <Grouping>
        <Enabled>false</Enabled>
        <GroupingInterval>2.0</GroupingInterval>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
    </SeriesDefinitions>
    <Orientation>Horizontal</Orientation>
    <LineAttributes>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>true</Visible>
    </LineAttributes>
    <Label>
      <Caption>
        <Value></Value>
        <Font>
          <Name>SansSerif</Name>
          <Size>10.0</Size>
          <Alignment/>
          <Rotation>-45.0</Rotation>
        </Font>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
      </Caption>
      <Background xsi:type="attribute:ColorDefinition">
        <Transparency>0</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Background>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
      </Outline>
      <Insets>
        <Top>0.0</Top>
        <Left>2.0</Left>
        <Bottom>0.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Visible>true</Visible>
    </Label>
    <LabelPosition>Below</LabelPosition>
    <Interval>1</Interval>
    <MajorGrid>
      <LineAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>196</Red>
          <Green>196</Green>
          <Blue>196</Blue>
        </Color>
        <Visible>false</Visible>
      </LineAttributes>
      <TickStyle>Across</TickStyle>
      <TickAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>196</Red>
          <Green>196</Green>
          <Blue>196</Blue>
        </Color>
        <Visible>true</Visible>
      </TickAttributes>
    </MajorGrid>
    <MinorGrid>
      <LineAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>225</Red>
          <Green>225</Green>
          <Blue>225</Blue>
        </Color>
        <Visible>false</Visible>
      </LineAttributes>
      <TickStyle>Across</TickStyle>
      <TickAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>225</Red>
          <Green>225</Green>
          <Blue>225</Blue>
        </Color>
        <Visible>false</Visible>
      </TickAttributes>
    </MinorGrid>
    <Scale>
      <MinorGridsPerUnit>5</MinorGridsPerUnit>
      <ShowOutside>false</ShowOutside>
    </Scale>
    <Origin>
      <Type>Min</Type>
      <Value xsi:type="data:NumberDataElement">
        <Value>0.0</Value>
      </Value>
    </Origin>
    <PrimaryAxis>true</PrimaryAxis>
    <CategoryAxis>true</CategoryAxis>
    <Percent>false</Percent>
  </Axes>
  <Orientation>Vertical</Orientation>
  <UnitSpacing>0.0</UnitSpacing>
  <Rotation/>
</model:ChartWithAxes>
]]></xml-property>
                                <property name="outputFormat">SVG</property>
                                <property name="marginTop">15px</property>
                                <property name="marginLeft">15px</property>
                                <property name="height">3.5in</property>
                                <property name="width">9.5in</property>
                                <list-property name="boundDataColumns">
                                    <structure>
                                        <property name="name">assetnum_1</property>
                                        <expression name="expression">dataSetRow["assetnum"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">description_1</property>
                                        <expression name="expression">dataSetRow["description"]</expression>
                                        <property name="dataType">string</property>
                                    </structure>
                                    <structure>
                                        <property name="name">sched_hrs_1</property>
                                        <expression name="expression">dataSetRow["sched_hrs"]</expression>
                                        <property name="dataType">decimal</property>
                                    </structure>
                                    <structure>
                                        <property name="name">downtime_hrs_1</property>
                                        <expression name="expression">dataSetRow["downtime_hrs"]</expression>
                                        <property name="dataType">decimal</property>
                                    </structure>
                                    <structure>
                                        <property name="name">availability_1</property>
                                        <expression name="expression">dataSetRow["availability"]</expression>
                                        <property name="dataType">decimal</property>
                                    </structure>
                                </list-property>
                            </extended-item>
                        </cell>
                    </row>
                </header>
            </group>
            <group id="357">
                <property name="groupName">label_group</property>
                <property name="interval">none</property>
                <property name="sortDirection">asc</property>
                <expression name="keyExpr">row["label_key"]</expression>
                <structure name="toc">
                    <expression name="expressionValue">null</expression>
                </structure>
                <property name="repeatHeader">true</property>
                <property name="hideDetail">false</property>
                <property name="pageBreakAfter">auto</property>
                <property name="pageBreakBefore">auto</property>
                <header>
                    <row id="358">
                        <property name="style">tabledetailslabel</property>
                        <cell id="359">
                            <property name="style">tabledetailslabelcell</property>
                            <label id="96">
                                <text-property name="text" key="asset">Asset</text-property>
                            </label>
                        </cell>
                        <cell id="360">
                            <property name="style">tabledetailslabelcell</property>
                            <label id="245">
                                <text-property name="text" key="description">Description</text-property>
                            </label>
                        </cell>
                        <cell id="361">
                            <property name="style">tabledetailslabelcell</property>
                            <label id="246">
                                <text-property name="text" key="scheduled_hrs">Scheduled Hrs.</text-property>
                            </label>
                        </cell>
                        <cell id="362">
                            <property name="style">tabledetailslabelcell</property>
                            <label id="247">
                                <text-property name="text" key="downtime_hrs">Downtime Hrs.</text-property>
                            </label>
                        </cell>
                        <cell id="363">
                            <property name="style">tabledetailslabelcell</property>
                            <label id="248">
                                <text-property name="text" key="asset_availability">Asset Availability</text-property>
                            </label>
                        </cell>
                        <cell id="364">
                            <property name="style">tabledetailslabelcell</property>
                        </cell>
                    </row>
                </header>
            </group>
            <detail>
                <row id="11">
                    <property name="style">tabledetailsdatarow</property>
                    <cell id="81">
                        <property name="style">tabledetailsdatacell</property>
                        <data id="240">
                            <property name="resultSetColumn">assetnum</property>
                            <list-property name="action">
                                <structure>
                                    <property name="formatType">html</property>
                                    <property name="linkType">drill-through</property>
                                    <property name="reportName">asset_detail.rptdesign</property>
                                    <property name="targetWindow">_self</property>
                                    <property name="targetFileType">report-design</property>
                                    <list-property name="paramBindings">
                                        <structure>
                                            <property name="paramName">where</property>
                                            <simple-property-list name="expression">
                                                <value type="javascript">"asset.assetnum = '" + row["assetnum"] + "' and asset.siteid = '" + row["siteid"] + "'"</value>
                                            </simple-property-list>
                                        </structure>
                                        <structure>
                                            <property name="paramName">appname</property>
                                            <simple-property-list name="expression">
                                                <value>params["appname"]</value>
                                            </simple-property-list>
                                        </structure>
                                        <structure>
                                            <property name="paramName">paramdelimiter</property>
                                            <simple-property-list name="expression">
                                                <value>params["paramdelimiter"]</value>
                                            </simple-property-list>
                                        </structure>
                                        <structure>
                                            <property name="paramName">paramstring</property>
                                            <simple-property-list name="expression">
                                                <value>params["paramstring"]</value>
                                            </simple-property-list>
                                        </structure>
                                    </list-property>
                                </structure>
                            </list-property>
                        </data>
                    </cell>
                    <cell id="77">
                        <property name="style">tabledetailsdatacell</property>
                        <data id="241">
                            <property name="resultSetColumn">description</property>
                        </data>
                    </cell>
                    <cell id="89">
                        <property name="style">tabledetailsdatacell</property>
                        <data id="242">
                            <structure name="numberFormat">
                                <property name="category">Fixed</property>
                                <property name="pattern">Fixed</property>
                            </structure>
                            <property name="resultSetColumn">sched_hrs</property>
                        </data>
                    </cell>
                    <cell id="85">
                        <property name="style">tabledetailsdatacell</property>
                        <data id="243">
                            <structure name="numberFormat">
                                <property name="category">Fixed</property>
                                <property name="pattern">Fixed</property>
                            </structure>
                            <property name="resultSetColumn">downtime_hrs</property>
                        </data>
                    </cell>
                    <cell id="12">
                        <property name="style">tabledetailsdatacell</property>
                        <data id="244">
                            <structure name="numberFormat">
                                <property name="category">Percent</property>
                                <property name="pattern">Percent</property>
                            </structure>
                            <property name="resultSetColumn">availability</property>
                        </data>
                    </cell>
                    <cell id="13">
                        <property name="style">tabledetailsdatacell</property>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="14">
                    <property name="height">0.12in</property>
                    <cell id="82">
                        <property name="colSpan">6</property>
                        <property name="rowSpan">1</property>
                        <property name="borderBottomColor">#000000</property>
                        <property name="borderBottomStyle">solid</property>
                        <property name="borderBottomWidth">thin</property>
                    </cell>
                </row>
            </footer>
        </table>
    </body>
</report>